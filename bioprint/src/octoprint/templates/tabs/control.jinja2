{% if webcamStream %}
    <div id="webcam_container" tabindex="0" data-bind="event: { keydown: onKeyDown, mouseover: onMouseOver, mouseout: onMouseOut, focus: onFocus }">
        <div id="webcam_rotator" data-bind="css: { rotate90: settings.webcam_rotate90() }">
            <img id="webcam_image" data-bind="css: { flipH: settings.webcam_flipH(), flipV: settings.webcam_flipV() }">
        </div>
        <div class="keycontrol_overlay" data-bind="visible: showKeycontrols">
            <div class="keycontrol_overlay_heading">{{ _("Keyboard controls active") }} <a href="#" data-bind="click: toggleKeycontrolHelp"><i data-bind="css: { 'icon-chevron-down': !keycontrolHelpActive(), 'icon-chevron-up': keycontrolHelpActive() }"></i></a></div>
            <div data-bind="visible: keycontrolHelpActive">
                <div class="keycontrol_overlay_column">
                    <kbd>&rarr;</kbd> / <kbd>&larr;</kbd>: {{ _("X Axis") }} +/-<br>
                    <kbd>&uarr;</kbd> / <kbd>&darr;</kbd>: {{ _("Y Axis") }} +/-<br>
                    <kbd>W</kbd>, <kbd>{{ _("Page&uarr;") }}</kbd> / <kbd>S</kbd>, <kbd>{{ _("Page&darr;") }}</kbd>: {{ _("Z Axis") }} +/-
                </div>
                <div class="keycontrol_overlay_column">
                    <kbd>Home</kbd>: {{ _("Home X/Y") }}<br>
                    <kbd>End</kbd>: {{ _("Home Z") }}<br>
                    <kbd>1</kbd>, <kbd>2</kbd>, <kbd>3</kbd>, <kbd>4</kbd>: {{ _("Stepsize") }} 0.1, 1, 10, 100mm
                </div>
            </div>
        </div>
    </div>
    <div data-bind="visible: keycontrolPossible">
        <small class="muted">{{ _("Hint: If you move your mouse over the picture, you enter keyboard control mode.") }}</small>
    </div>
{% endif %}
<div class="row-fluid">
    <div class="span6">
        <div id="motion" class="jog-panel">
            <div class="row-fluid">
                <!-- XY jogging control panel -->
                <div id="motion-control">
                    <div id="XY" class="jog-panel">
                        <h1>X/Y</h1>
                        <div>
                            <button class="btn box" id="control-yinc" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('y',1) }"><i class="icon-arrow-up"></i></button>
                        </div>
                        <div id="X">
                            <button class="btn box pull-left" id="control-xdec" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('x',1) }"><i class="icon-arrow-left"></i></button>
                            <button class="btn box pull-left" id="control-xyhome" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendHomeCommand(['x', 'y']) }"><i class="icon-home"></i></button>
                            <button class="btn box pull-left" id="control-xinc" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('x',-1) }"><i class="icon-arrow-right"></i></button>
                        </div>
                        <div>
                            <button class="btn box" id="control-ydec" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('y',-1) }"><i class="icon-arrow-down"></i></button>
                        </div>
                    </div>
                    <!-- Z jogging control panel -->
                    <div id="Z" class="jog-panel">
                        <h1>Z</h1>
                        <div>
                            <button class="btn box" id="control-zinc" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('z',-1) }"><i class="icon-arrow-up"></i></button>
                        </div>
                        <div>
                            <button class="btn box" id="control-zhome" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendHomeCommand(['z']) }"><i class="icon-home"></i></button>
                        </div>
                        <div>
                            <button class="btn box" id="control-zdec" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('z',1) }"><i class="icon-arrow-down"></i></button>
                        </div>
                    </div>
                    <!-- E jogging control panel -->
                    <div id="E" class="jog-panel">
                        <h1>E</h1>
                        <div>
                            <button class="btn box" id="control-zinc" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('e',1) }"><i class="icon-arrow-up"></i></button>
                        </div>
                        <div>
                            <button class="btn box" id="control-zhome" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendHomeCommand(['e']) }"><i class="icon-home"></i></button>
                        </div>
                        <div>
                            <button class="btn box" id="control-zdec" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('e',-1) }"><i class="icon-arrow-down"></i></button>
                        </div>
                    </div>
                    <!-- Jog distance -->
                    <div class="distance">
                        <div class="btn-group" data-toggle="buttons-radio" id="jog_distance">
                            <button type="button" id="control-distance01" class="btn distance" data-distance="0.1" data-bind="enable: loginState.isUser()">0.1</button>
                            <button type="button" id="control-distance1" class="btn distance" data-distance="1" data-bind="enable: loginState.isUser()">1</button>
                            <button type="button" id="control-distance10" class="btn distance active" data-distance="10" data-bind="enable: loginState.isUser()">10</button>
                            <button type="button" id="control-distance100" class="btn distance" data-distance="100" data-bind="enable: loginState.isUser()">100</button>
                        </div>
                    </div>
                </div>
                <button class="btn btn-block" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendCustomCommand({type:'command',command:'M18'}) }">{{ _('Motors off') }}</button>
                <button class="btn btn-block" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendEmergencyStop() }">{{ _('Emergency Stop') }}</button>
                <hr>
                <select class="form-control" style="width: 250px" id="wellPlate" data-bind="enable: isOperational() && loginState.isUser() && isHomed()">
                        <option selected="selected">Select Plate Type</option>
                        <option value="1">Petri Dish</option>
                        <option value="6">6-Well Plate</option>
                        <option value="12">12-Well Plate</option>
                        <option value="24">24-Well Plate</option>
                        <option value="96">96-Well Plate</option>
                </select>
                <button class="btn btn-block" data-bind="enable: isOperational() && loginState.isUser() && isHomed(), click: function() { $root.selectWellPlate() }">Select Well Plate</button>
            </div>
            <hr>
            <div class="row-fluid">
                <div class="span12 terminal">
                    <pre id="terminal-output" class="pre-scrollable" data-bind="foreach: displayedLines"><span data-bind="text: line, css: {muted: type == 'filtered'}"></span><br></pre>
                    <small class="pull-left"><button class="btn btn-mini" data-bind="click: toggleAutoscroll, css: {active: autoscrollEnabled}">{{ _('Autoscroll') }}</button> <span data-bind="text: lineCount"></span></small>
                    <small class="pull-right"><a href="#" data-bind="click: scrollToEnd">{{ _("Scroll to end") }}</a>&nbsp;|&nbsp;<a href="#" data-bind="click: selectAll">{{ _("Select all") }}</a></small>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span6" id="termin-filterpanel">
                    <div data-bind="foreach: filters">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="attr: { value: regex }, checked: $parent.activeFilters"> <span data-bind="text: name"></span>
                        </label>
                    </div>
                </div>
                <div class="span6" id="terminal-sendpanel" style="display: none;" data-bind="visible: loginState.isUser">
                    <div class="input-append">
                        <input type="text" id="terminal-command" data-bind="value: command, event: { keyup: function(d,e) { return handleKeyUp(e); }, keydown: function(d,e) { return handleKeyDown(e); } }, enable: isOperational() && loginState.isUser()">
                        <button class="btn" type="button" id="terminal-send" data-bind="click: sendCommand, enable: isOperational() && loginState.isUser()">{{ _('Send') }}</button>
                    </div>
                    <small class="muted">{{ _('Hint: Use the arrow up/down keys to recall commands sent previously') }}</small>
                </div>
            </div>

            <div>
                <div><small><a href="#" class="muted" onclick="$(this).children().toggleClass('icon-caret-right icon-caret-down').parent().parent().parent().next().slideToggle('fast')"><i class="icon-caret-right"></i> {{ _('Advanced options') }}</a></small></div>
                <div class="hide">
                    <button class="btn btn-block" type="button" data-bind="click: fakeAck, enable: isOperational() && loginState.isUser()">{{ _("Fake Acknowledgement") }}</button>
                    <small class="muted">{{ _("If acknowledgements (\"ok\"s) sent by the firmware get lost due to issues with the serial communication to your printer, OctoPrint's communication with it can become stuck. If that happens, this can help. Please be advised that such occurences hint at general communication issues with your printer which will probably negatively influence your printing results and which you should therefore try to resolve!") }}</small>
                </div>
            </div>
        </div>
    </div>
    <div class="span6">
        <div class="row-fluid">
            <!-- ko foreach: tools -->
                <div data-bind="template: { name: 'extruder-template' }"></div>
            <!-- /ko -->

            <script type="text/html" id="extruder-template">
                <div class="span5 jog-panel">
                    <h1 data-bind="text: name"></h1>
                    <div>
                        <button class="btn btn-block control-box" data-bind="enable: $root.isOperational(), click: function() { $root.sendPressureIncrease(key()) }">{{ _('+') }}</button>
                        <div class="display">
                            <h2 data-bind="html: formatPressure(pressure())"></h2>
                        </div>
                        <button class="btn btn-block control-box" data-bind="enable: $root.isOperational(), click: function() { $root.sendPressureDecrease(key()) }">{{ _('-') }}</button>
                        <hr>
                        <h2 style="vertical-align: middle" data-bind="html: formatTemperature(actual())"></h2>
                        <h3>Actual</h3>
                        <div class="input-append">
                            <input type="text" class="input text-right tempInput" data-bind="attr: {placeholder: cleanTemperature(target()) }, value: newTarget, enable: $root.isOperational(), event: { keyup: function(d, e) {$root.handleEnter(e, 'target', $data);} }">
                            <span class="add-on tempAddOn">&deg;C</span>
                        </div>
                        <div class="btn-group">
                            <button type="submit" data-bind="click: $parent.setTarget, enable: $root.isOperational()" class="tempSubmit btn">{{ _('Set Target') }}</button>
                            <button class="btn dropdown-toggle tempDropdown" data-toggle="dropdown" data-bind="enable: $root.isOperational()">
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <!-- ko foreach: $root.temperature_profiles -->
                                <li>
                                    <a href="#" data-bind="click: function() {$root.setTargetFromProfile($parent, $data);}, text: 'Set ' + name + ' (' + ($parent.key() == 'bed' ? bed : extruder) + '&deg;C)'"></a>
                                </li>
                                <!-- /ko -->
                                <li class="divider"></li>
                                <li>
                                    <a href="#" data-bind="click: $root.setTargetToZero">{{ _('Off') }}</a>
                                </li>
                            </ul>
                        </div>
                        <hr>
                        <button class="btn btn-block control-box" data-bind="enable: $root.isOperational() && !$root.isPrinting(), click: function() { $root.saveToolChangeDist(key()) }">{{ _('Calibrate Tool') }}</button>
                        <button class="btn btn-block control-box" data-bind="enable: $root.isOperational() && !$root.isPrinting() && !$root.extruderSelected(key()), click: function() { $root.switchTool(key()) }">{{ _('Select Tool') }}</button>
                        <button class="btn btn-block control-box" data-bind="enable: $root.isOperational() && !$root.isPrinting() && !$root.checkExtruding(key()), click: function() { $root.startExtrude(key()) }">{{ _('Extrude') }}</button>
                        <button class="btn btn-block control-box" data-bind="enable: $root.isOperational() && !$root.isPrinting() && $root.checkExtruding(key()), click: function() { $root.stopExtrude(key()) }">{{ _('Stop') }}</button>
                    </div>
                </div>
            </script>
        <div class="row-fluid">
            <button class="span10 btn btn-block" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && isHomed(), click: function() { $root.toolMid() }">Extruder Midpoint</button>
        </div>
        <div class="row-fluid">
            <hr>
            <!-- Light Intensity -->
            <h1>Print Crosslinking Parameters</h1>
            <div class="row-fluid">
                <div class="span4">
                    <h3>Frequency:</h3>
                </div>
                <div class="span4">
                    <h3>Intensity:</h3>
                </div>
                <div class="span4">
                    <h3>Duration:</h3>
                </div>
            </div>
            <div class="row-fluid">
                <div class="input-append span4">
                    <input type="text" class="input text-right clInput" data-bind="attr: {placeholder: cl_layers() }, value: cl_layers, enable: $root.isOperational() && $root.loginState.isUser(), event: { keyup: function(d, e) {$root.handleEnter(e, 'cl_params', $data);} }">
                    <span class="add-on clAddOn"> layers</span>
                </div>
                <div class="input-append span4">
                    <input type="text" class="input text-right clInput" data-bind="attr: {placeholder: cl_intensity() }, value: cl_intensity, enable: $root.isOperational() && $root.loginState.isUser(), event: { keyup: function(d, e) {$root.handleEnter(e, 'cl_params', $data);} }">
                    <span class="add-on clAddOn">%</span>
                </div>
                <div class="input-append span4">
                    <input type="text" class="input text-right clInput" data-bind="attr: {placeholder: cl_duration() }, value: cl_duration, enable: $root.isOperational() && $root.loginState.isUser(), event: { keyup: function(d, e) {$root.handleEnter(e, 'cl_params', $data);} }">
                    <span class="add-on clAddOn"> ms</span>
                </div>
            </div>
            <h1>PostPrint Crosslinking Parameters</h1>
            <div class="row-fluid">
                <div class="span4">
                </div>
                <div class="span4">
                    <h3>Intensity:</h3>
                </div>
                <div class="span4">
                    <h3>Duration:</h3>
                </div>
            </div>
            <div class="row-fluid">
                <button type="button" class="btn btn-block control-box span4" data-toggle="button" data-bind="enable: $root.isOperational() && $root.loginState.isUser(), click: function() { if(cl_end()) { cl_end(false) } else { cl_end(true)} $root.set_clParams()}, text: $root.end_clText()" aria-pressed="false" autocomplete="off"></button>
                <div class="input-append span4">
                    <input type="text" class="input text-right clInput" data-bind="attr: {placeholder: cl_duration() }, value: cl_end_intensity, enable: $root.isOperational() && $root.loginState.isUser(), event: { keyup: function(d, e) {$root.handleEnter(e, 'cl_params', $data);} }">
                    <span class="add-on clAddOn">%</span>
                </div>
                <div class="input-append span4">
                    <input type="text" class="input text-right clInput" data-bind="attr: {placeholder: cl_duration() }, value: cl_end_duration, enable: $root.isOperational() && $root.loginState.isUser(), event: { keyup: function(d, e) {$root.handleEnter(e, 'cl_params', $data);} }">
                    <span class="add-on clAddOn"> ms</span>
                </div>
            </div>
        </div>
    </div>
</div>


{% if enableTemperatureGraph %}
    <div class="row-fluid">
        <div class="span12" id="temperature-graph"></div>
    </div>
{% endif %}

<!-- Container for custom controls -->
<div style="clear: both; display: none;" data-bind="visible: loginState.isUser, template: { name: $root.displayMode, foreach: controls }"></div>

<!-- Templates for custom controls -->
<script type="text/html" id="customControls_containerTemplate_nameless">
    <div class="custom_section">
        <!-- ko template: { name: 'customControls_containerTemplate', data: $data } --><!-- /ko -->
    </div>
</script>
<script type="text/html" id="customControls_containerTemplate_collapsable">
    <div class="custom_section">
        <h1 onclick="$(this).children().first().toggleClass('icon-caret-down icon-caret-right').parent().next().slideToggle('fast')"><i data-bind="css: {'icon-caret-down': !collapsed, 'icon-caret-right': collapsed}"></i> <span data-bind="text: name"></span></h1>
        <!-- ko template: { name: 'customControls_containerTemplate', data: $data } --><!-- /ko -->
    </div>
</script>

<script type="text/html" id="customControls_containerTemplate">
    <!-- ko if: layout == 'vertical' -->
    <div class="custom_section_vertical" data-bind="template: { name: $root.displayMode, foreach: children }, css: {hide: collapsed && name}"></div>
    <!-- /ko -->

    <!-- ko if: layout == 'horizontal' -->
    <div class="custom_section_horizontal" data-bind="template: { name: $root.displayMode, foreach: children }, css: {hide: collapsed && name}"></div>
    <!-- /ko -->

    <!-- ko if: layout == 'horizontal_grid' -->
    <div class="row-fluid custom_section_horizontal_grid" data-bind="css: {hide: collapsed && name}">
        <!-- ko foreach: children -->
        <div data-bind="template: { name: $root.displayMode }, css: $root.rowCss($data)"></div>
        <!-- /ko -->
    </div>
    <!-- /ko -->
</script>
<script type="text/html" id="customControls_controlTemplate">
    <form class="form-inline custom_control">
        <!-- ko template: { name: 'customControls_controlTemplate_input', data: $data, if: $data.hasOwnProperty('input') } --><!-- /ko -->
        <!-- ko template: { name: 'customControls_controlTemplate_command', data: $data, if: $data.hasOwnProperty('command') || $data.hasOwnProperty('commands') || $data.hasOwnProperty('script') || $data.hasOwnProperty('javascript') } --><!-- /ko -->
        <!-- ko template: { name: 'customControls_controlTemplate_output', data: $data, if: $data.hasOwnProperty('output') } --><!-- /ko -->
    </form>
</script>
<script type="text/html" id="customControls_controlTemplate_input">
    <!-- ko foreach: input -->
        <label style="cursor: default" data-bind="text: name"></label>
        <!-- ko if: slider -->
            <input type="number" style="width: 100px" data-bind="slider: {value: value, min: slider.min, max: slider.max, step: slider.step}">
        <!-- /ko -->
        <!-- ko ifnot: slider -->
            <input type="text" class="input-small" data-bind="attr: {placeholder: name}, value: value">
        <!-- /ko -->
    <!-- /ko -->
</script>
<script type="text/html" id="customControls_controlTemplate_output">
    <label style="cursor: default" data-bind="text: output"></label>
</script>
<script type="text/html" id="customControls_controlTemplate_command">
    <button class="btn" data-bind="text: name, enable: $root.isCustomEnabled($data), click: function() { $root.clickCustom($data) }"></button>
</script>
<!-- End of templates for custom controls -->


</div>